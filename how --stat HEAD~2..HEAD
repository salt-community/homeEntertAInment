[1mdiff --git a/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/controller/ConvertApiController.java b/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/controller/ConvertApiController.java[m
[1mindex fc87bd1..80b4117 100644[m
[1m--- a/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/controller/ConvertApiController.java[m
[1m+++ b/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/controller/ConvertApiController.java[m
[36m@@ -1,7 +1,9 @@[m
 package com.bestgroup.HomeEntertAInment.boardgame.controller;[m
 [m
 import com.bestgroup.HomeEntertAInment.boardgame.dto.ConvertApiResponseDto;[m
[32m+[m[32mimport com.bestgroup.HomeEntertAInment.boardgame.dto.DecodedConvertApiResponse;[m
 import com.bestgroup.HomeEntertAInment.boardgame.service.ConvertApiService;[m
[32m+[m[32mimport com.bestgroup.HomeEntertAInment.boardgame.utils.DecodeBase64ToString;[m
 import lombok.RequiredArgsConstructor;[m
 import lombok.extern.slf4j.Slf4j;[m
 import org.springframework.http.ResponseEntity;[m
[36m@@ -25,10 +27,10 @@[m [mpublic class ConvertApiController {[m
      * Endpoint to convert a PDF file to text for board game rule analysis[m
      *[m
      * @param file The PDF file to convert (typically a board game rule book)[m
[31m-     * @return ResponseEntity containing the conversion result[m
[32m+[m[32m     * @return ResponseEntity containing the decoded conversion result[m
      */[m
     @PostMapping("/pdf-to-text")[m
[31m-    public ResponseEntity<ConvertApiResponseDto> convertPdfToText(@RequestParam("file") MultipartFile file) {[m
[32m+[m[32m    public ResponseEntity<DecodedConvertApiResponse> convertPdfToText(@RequestParam("file") MultipartFile file) {[m
         try {[m
             log.info("Received request to convert PDF rule book: {}", file.getOriginalFilename());[m
 [m
[36m@@ -37,7 +39,11 @@[m [mpublic class ConvertApiController {[m
             }[m
 [m
             ConvertApiResponseDto result = convertApiService.convertPdfToText(file);[m
[31m-            return ResponseEntity.ok(result);[m
[32m+[m[41m            [m
[32m+[m[32m            // Transform ConvertApiResponseDto to DecodedConvertApiResponse[m
[32m+[m[32m            DecodedConvertApiResponse decodedResponse = transformToDecodedResponse(result);[m
[32m+[m[41m            [m
[32m+[m[32m            return ResponseEntity.ok(decodedResponse);[m
 [m
         } catch (IllegalArgumentException | IllegalStateException e) {[m
             log.error("Invalid request: {}", e.getMessage());[m
[36m@@ -50,4 +56,31 @@[m [mpublic class ConvertApiController {[m
             return ResponseEntity.internalServerError().build();[m
         }[m
     }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Transforms ConvertApiResponseDto to DecodedConvertApiResponse[m
[32m+[m[32m     * Extracts the first file from the response and decodes its content[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param response The original ConvertAPI response[m
[32m+[m[32m     * @return DecodedConvertApiResponse with decoded text content[m
[32m+[m[32m     */[m
[32m+[m[32m    private DecodedConvertApiResponse transformToDecodedResponse(ConvertApiResponseDto response) {[m
[32m+[m[32m        if (response == null || response.getFiles() == null || response.getFiles().isEmpty()) {[m
[32m+[m[32m            throw new IllegalStateException("No files found in the conversion response");[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Get the first converted file (assuming single file conversion)[m
[32m+[m[32m        ConvertApiResponseDto.ConvertedFile file = response.getFiles().get(0);[m
[32m+[m[41m        [m
[32m+[m[32m        // Decode the Base64 file data to get the text content[m
[32m+[m[32m        String decodedData = DecodeBase64ToString.decode(file.getFileData());[m
[32m+[m[41m        [m
[32m+[m[32m        return new DecodedConvertApiResponse([m
[32m+[m[32m            file.getFileName(),[m
[32m+[m[32m            file.getFileExt(),[m
[32m+[m[32m            file.getFileSize(),[m
[32m+[m[32m            file.getFileData(), // codedData (original Base64)[m
[32m+[m[32m            decodedData         // decodedData (decoded text)[m
[32m+[m[32m        );[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/dto/DecodedConvertApiResponse.java b/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/dto/DecodedConvertApiResponse.java[m
[1mnew file mode 100644[m
[1mindex 0000000..17293f6[m
[1m--- /dev/null[m
[1m+++ b/backend/src/main/java/com/bestgroup/HomeEntertAInment/boardgame/dto/DecodedConvertApiResponse.java[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mpackage com.bestgroup.HomeEntertAInment.boardgame.dto;[m
[32m+[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * DTO representing the decoded response from ConvertAPI PDF to text conversion[m
[32m+[m[32m * This model includes both the original coded data and the decoded text content[m
[32m+[m[32m */[m
[32m+[m[32m@Data[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32mpublic class DecodedConvertApiResponse {[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Name of the converted file[m
[32m+[m[32m     */[m
[32m+[m[32m    private String fileName;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * File extension[m
[32m+[m[32m     */[m
[32m+[m[32m    private String fileExt;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Size of the file in bytes[m
[32m+[m[32m     */[m
[32m+[m[32m    private int fileSize;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Base64 encoded file data (original coded data from ConvertApiResponseDto)[m
[32m+[m[32m     */[m
[32m+[m[32m    private String codedData;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Decoded text content from the Base64 encoded file data[m
[32m+[m[32m     */[m
[32m+[m[32m    private String decodedData;[m
[32m+[m[32m}[m
[1mdiff --git a/backend/src/test/java/com/bestgroup/HomeEntertAInment/HomeEntertAInmentBackendApplicationTests.java b/backend/src/test/java/com/bestgroup/HomeEntertAInment/HomeEntertAInmentBackendApplicationTests.java[m
[1mindex 1490198..98d7cdd 100644[m
[1m--- a/backend/src/test/java/com/bestgroup/HomeEntertAInment/HomeEntertAInmentBackendApplicationTests.java[m
[1m+++ b/backend/src/test/java/com/bestgroup/HomeEntertAInment/HomeEntertAInmentBackendApplicationTests.java[m
[36m@@ -2,8 +2,13 @@[m [mpackage com.bestgroup.HomeEntertAInment;[m
 [m
 import org.junit.jupiter.api.Test;[m
 import org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m[32mimport org.springframework.test.context.TestPropertySource;[m
 [m
 @SpringBootTest[m
[32m+[m[32m@TestPropertySource(properties = {[m
[32m+[m[32m    "CONVERT_API_TOKEN=test-token",[m
[32m+[m[32m    "GEMINI_API_KEY=test-key"[m
[32m+[m[32m})[m
 class HomeEntertAInmentBackendApplicationTests {[m
 [m
 	@Test[m
